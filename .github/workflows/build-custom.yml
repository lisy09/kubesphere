name: Custom Build

on:
  workflow_dispatch:

env:
  IMAGE_REPO: lisy09kubesphere
  IMAGE_VERSION: v3.0.0
  DOCKER_PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64/v8

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Check pr is properly formatted
        run: diff -u <(echo -n) <(gofmt -d ./pkg ./cmd ./tools ./test)

      - name: Downloading go dependencies
        run: go mod vendor

      - name: Install kubebuilder
        run: bash hack/install_kubebuilder.sh

      - name: Build
        run: make all

      - name: Make OpenAPI Spec
        run: make openapi

      - name: Uploading code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Get branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      
      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Upload built binary
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: |
            /bin/cmd/ks-apiserver-*
            /bin/cmd/control-manager-*

      - name: Build and push ks-apiserver
        run: |
          docker buildx build \
            --push \
            --file build/ks-apiserver/Dockerfile \
            --tag $IMAGE_REPO/ks-apiserver:$IMAGE_VERSION \
            --platform $DOCKER_PLATFORMS .

      - name: Build and push ks-controller-manager
        run: |
          docker buildx build \
            --push \
            --file build/ks-controller-manager/Dockerfile \
            --tag $IMAGE_REPO/ks-controller-manager:$IMAGE_VERSION \
            --platform $DOCKER_PLATFORMS .